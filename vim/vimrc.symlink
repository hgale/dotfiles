set nocompatible
filetype off

"set rtp+=~/.vim/bundle/vundle/
"call vundle#rc()
"
"" Let Vundle manage Vundle
"Bundle 'gmarik/vundle'
"
"Bundle 'git://git.wincent.com/command-t.git'
"
"" Syntax related bundles
"Bundle 'leshill/vim-json'
"Bundle 'kchmck/vim-coffee-script'
"Bundle 'sdawson/vim-markdown'
"Bundle 'vim-scripts/django.vim'
"Bundle 'vim-scripts/Vim-R-plugin'
"
"" Random
"Bundle 'skammer/vim-css-color'
"Bundle 'tpope/vim-speeddating'

filetype plugin indent on

set laststatus=2
set cmdheight=2
set ruler
set title

set showmode
set showcmd
set report=0
set visualbell

set incsearch
set showmatch
set ignorecase " searches are case insensitive
set smartcase  " unless they contain at least one capital letter

set nowrap
set listchars+=extends:@

set autoindent
set tabstop=2
set expandtab
set copyindent

set shiftwidth=2
set shiftround

set textwidth=79
set formatoptions=tcroqwn
set backspace=indent,eol,start

syntax on
set background=light
colorscheme molokai
set t_Co=256

highlight ExtraWhitespace ctermbg=red guibg=red
match ExtraWhitespace /\s\+$/

filetype on
autocmd FileType make :set noexpandtab
autocmd FileType c :set cindent
autocmd FileType txt :set wrap
autocmd FileType python :set textwidth=0
autocmd FileType go :set textwidth=0
autocmd FileType mkd :set textwidth=0
filetype plugin indent on
filetype plugin on

set backup
set backupdir=~/.vim/backup

set wildchar=<TAB>
set wildmenu
set wildmode=longest,full

if version >= 703
  set relativenumber
else
  set nu
endif

set history=50
set sm
set wm=0

if has('gui_running')
  set guifont=DejaVu\ Sans\ Mono\ 8
endif

" Faster split movements
nmap <silent> <c-k> :wincmd k<CR>
nmap <silent> <c-j> :wincmd j<CR>
nmap <silent> <c-h> :wincmd h<CR>
nmap <silent> <c-l> :wincmd l<CR>

" Command-T file list refresh
nmap <leader>f :CommandTFlush<CR>

map ; :
noremap ;; ;
nnoremap ' `
nnoremap ` '

" Set leader from \ to <SPACE>
let mapleader = " "

" Toggle between relative and absolute line numbers
function! NumberToggle()
  if(&relativenumber == 1)
    set number
  else
    set relativenumber
  endif
endfunc

nnoremap <C-y> :call NumberToggle()<CR>

" Highlight cols 81 and 82
function! HighlightTooLongLines()
  highlight def link RightMargin Error
  if &textwidth != 0
    exec 'match RightMargin /\%<' . (&textwidth + 3) . 'v.\%>' . (&textwidth + 1) . 'v/'
  endif
endfunction

augroup filetypedetect
au BufNewFile,BufRead * call HighlightTooLongLines()
augroup END

" Remove _ to <- replacement in vim-r-plugin
let vimrplugin_underscore = 0

" line navigation stay the same when wrapping is on
nmap j gj
nmap k gk

function WrapToggle()
  if &wrap
    echo "Wrap OFF"
    setlocal nowrap
    set virtualedit=all
  else
    echo "Wrap ON"
    setlocal wrap linebreak nolist
    set virtualedit=
    setlocal textwidth=0
    setlocal wrapmargin=0
  endif
endfunction

noremap <leader>w :call WrapToggle()<CR>

" Spellcheck settings
set spl=en_gb
